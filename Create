from PIL import Image
import numpy as np
import wave
import struct

# 1. Load the image
image_path = "images.png"  # The uploaded image file name
image = Image.open(image_path)

# 2. Convert the image to grayscale
gray_image = image.convert("L")  # Convert to grayscale (8-bit)
gray_image.show()

# 3. Convert the image to a binary array (NumPy array)
image_array = np.array(gray_image)

# 4. Flatten the 2D image array to 1D binary data
binary_data = image_array.flatten()

# 5. Normalize the data to fit audio signal range (0-32767 for 16-bit audio)
normalized_data = np.interp(binary_data, (binary_data.min(), binary_data.max()), (0, 32767)).astype(np.int16)

# 6. Convert the binary data into an audio signal (using wave format)
# Define audio parameters
sample_rate = 44100  # Samples per second
num_channels = 1     # Mono sound
sampwidth = 2        # 2 bytes per sample (16-bit audio)

# Create a wave file
audio_filename = "image_audio.wav"
with wave.open(audio_filename, 'w') as wav_file:
    wav_file.setnchannels(num_channels)
    wav_file.setsampwidth(sampwidth)
    wav_file.setframerate(sample_rate)
    
    # Write the normalized data as audio
    wav_file.writeframes(struct.pack('h' * len(normalized_data), *normalized_data))
